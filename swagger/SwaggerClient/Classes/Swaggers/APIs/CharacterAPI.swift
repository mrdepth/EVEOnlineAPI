//
// CharacterAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class CharacterAPI: APIBase {
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCharactersCharacterId: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Get character's public information
     
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCharactersCharacterId(characterId characterId: Int32, datasource: Datasource_getCharactersCharacterId? = nil, completion: ((data: GetCharactersCharacterIdOk?, error: ErrorType?) -> Void)) {
        getCharactersCharacterIdWithRequestBuilder(characterId: characterId, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get character's public information
     - GET /characters/{characterId}/
     - Public information about a character  ---  Alternate route: `/v3/characters/{character_id}/`  Alternate route: `/legacy/characters/{character_id}/`  Alternate route: `/dev/characters/{character_id}/`   ---  This route is cached for up to 3600 seconds
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example={
  "ancestry_id" : 19,
  "birthday" : "2015-03-24T11:37:00Z",
  "bloodline_id" : 3,
  "corporation_id" : 109299958,
  "description" : "",
  "gender" : "male",
  "name" : "CCP Bartender",
  "race_id" : 2
}}]
     
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<GetCharactersCharacterIdOk> 
     */
    public class func getCharactersCharacterIdWithRequestBuilder(characterId characterId: Int32, datasource: Datasource_getCharactersCharacterId? = nil) -> RequestBuilder<GetCharactersCharacterIdOk> {
        var path = "/characters/{characterId}/"
        path = path.stringByReplacingOccurrencesOfString("{characterId}", withString: "\(characterId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<GetCharactersCharacterIdOk>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCharactersCharacterIdCorporationhistory: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Get corporation history
     
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCharactersCharacterIdCorporationhistory(characterId characterId: Int32, datasource: Datasource_getCharactersCharacterIdCorporationhistory? = nil, completion: ((data: [GetCharactersCharacterIdCorporationhistory200Ok]?, error: ErrorType?) -> Void)) {
        getCharactersCharacterIdCorporationhistoryWithRequestBuilder(characterId: characterId, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get corporation history
     - GET /characters/{characterId}/corporationhistory/
     - Get a list of all the corporations a character has been a member of  ---  Alternate route: `/v1/characters/{character_id}/corporationhistory/`  Alternate route: `/legacy/characters/{character_id}/corporationhistory/`  Alternate route: `/dev/characters/{character_id}/corporationhistory/`   ---  This route is cached for up to 3600 seconds
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "corporation_id" : 90000001,
  "is_deleted" : false,
  "record_id" : 500,
  "start_date" : "2016-06-26T20:00:00Z"
}, {
  "corporation_id" : 90000002,
  "is_deleted" : false,
  "record_id" : 501,
  "start_date" : "2016-07-26T20:00:00Z"
} ]}]
     
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<[GetCharactersCharacterIdCorporationhistory200Ok]> 
     */
    public class func getCharactersCharacterIdCorporationhistoryWithRequestBuilder(characterId characterId: Int32, datasource: Datasource_getCharactersCharacterIdCorporationhistory? = nil) -> RequestBuilder<[GetCharactersCharacterIdCorporationhistory200Ok]> {
        var path = "/characters/{characterId}/corporationhistory/"
        path = path.stringByReplacingOccurrencesOfString("{characterId}", withString: "\(characterId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[GetCharactersCharacterIdCorporationhistory200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCharactersCharacterIdPortrait: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Get character portraits
     
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCharactersCharacterIdPortrait(characterId characterId: Int32, datasource: Datasource_getCharactersCharacterIdPortrait? = nil, completion: ((data: GetCharactersCharacterIdPortraitOk?, error: ErrorType?) -> Void)) {
        getCharactersCharacterIdPortraitWithRequestBuilder(characterId: characterId, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get character portraits
     - GET /characters/{characterId}/portrait/
     - Get portrait urls for a character  ---  Alternate route: `/v2/characters/{character_id}/portrait/`  Alternate route: `/dev/characters/{character_id}/portrait/`   ---  This route is cached for up to 3600 seconds
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example={
  "px128x128" : "https://imageserver.eveonline.com/Character/95465499_128.jpg",
  "px256x256" : "https://imageserver.eveonline.com/Character/95465499_256.jpg",
  "px512x512" : "https://imageserver.eveonline.com/Character/95465499_512.jpg",
  "px64x64" : "https://imageserver.eveonline.com/Character/95465499_64.jpg"
}}]
     
     - parameter characterId: (path) An EVE character ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<GetCharactersCharacterIdPortraitOk> 
     */
    public class func getCharactersCharacterIdPortraitWithRequestBuilder(characterId characterId: Int32, datasource: Datasource_getCharactersCharacterIdPortrait? = nil) -> RequestBuilder<GetCharactersCharacterIdPortraitOk> {
        var path = "/characters/{characterId}/portrait/"
        path = path.stringByReplacingOccurrencesOfString("{characterId}", withString: "\(characterId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<GetCharactersCharacterIdPortraitOk>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCharactersNames: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Get character names
     
     - parameter characterIds: (query) A comma separated list of character IDs 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCharactersNames(characterIds characterIds: [Int64], datasource: Datasource_getCharactersNames? = nil, completion: ((data: [GetCharactersNames200Ok]?, error: ErrorType?) -> Void)) {
        getCharactersNamesWithRequestBuilder(characterIds: characterIds, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get character names
     - GET /characters/names/
     - Resolve a set of character IDs to character names  ---  Alternate route: `/v1/characters/names/`  Alternate route: `/legacy/characters/names/`  Alternate route: `/dev/characters/names/`   ---  This route is cached for up to 3600 seconds
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "character_id" : 95465499,
  "character_name" : "CCP Bartender"
} ]}]
     
     - parameter characterIds: (query) A comma separated list of character IDs 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<[GetCharactersNames200Ok]> 
     */
    public class func getCharactersNamesWithRequestBuilder(characterIds characterIds: [Int64], datasource: Datasource_getCharactersNames? = nil) -> RequestBuilder<[GetCharactersNames200Ok]> {
        let path = "/characters/names/"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "character_ids": characterIds,
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[GetCharactersNames200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_postCharactersCharacterIdCspa: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Calculate a CSPA charge cost
     
     - parameter characterId: (path) An EVE character ID 
     - parameter characters: (body) The target characters to calculate the charge for 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postCharactersCharacterIdCspa(characterId characterId: Int32, characters: PostCharactersCharacterIdCspaCharacters, datasource: Datasource_postCharactersCharacterIdCspa? = nil, completion: ((data: PostCharactersCharacterIdCspaCreated?, error: ErrorType?) -> Void)) {
        postCharactersCharacterIdCspaWithRequestBuilder(characterId: characterId, characters: characters, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Calculate a CSPA charge cost
     - POST /characters/{characterId}/cspa/
     - Takes a source character ID in the url and a set of target character ID's in the body, returns a CSPA charge cost  ---  Alternate route: `/v3/characters/{character_id}/cspa/`  Alternate route: `/legacy/characters/{character_id}/cspa/`  Alternate route: `/dev/characters/{character_id}/cspa/` 
     - OAuth:
       - type: oauth2
       - name: evesso
     - examples: [{contentType=application/json, example={
  "cost" : 295000
}}]
     
     - parameter characterId: (path) An EVE character ID 
     - parameter characters: (body) The target characters to calculate the charge for 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<PostCharactersCharacterIdCspaCreated> 
     */
    public class func postCharactersCharacterIdCspaWithRequestBuilder(characterId characterId: Int32, characters: PostCharactersCharacterIdCspaCharacters, datasource: Datasource_postCharactersCharacterIdCspa? = nil) -> RequestBuilder<PostCharactersCharacterIdCspaCreated> {
        var path = "/characters/{characterId}/cspa/"
        path = path.stringByReplacingOccurrencesOfString("{characterId}", withString: "\(characterId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = characters.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PostCharactersCharacterIdCspaCreated>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
