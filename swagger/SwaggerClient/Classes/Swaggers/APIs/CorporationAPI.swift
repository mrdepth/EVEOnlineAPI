//
// CorporationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class CorporationAPI: APIBase {
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCorporationsCorporationId: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Get corporation information
     
     - parameter corporationId: (path) An Eve corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCorporationsCorporationId(corporationId corporationId: Int32, datasource: Datasource_getCorporationsCorporationId? = nil, completion: ((data: GetCorporationsCorporationIdOk?, error: ErrorType?) -> Void)) {
        getCorporationsCorporationIdWithRequestBuilder(corporationId: corporationId, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get corporation information
     - GET /corporations/{corporationId}/
     - Public information about a corporation  ---  Alternate route: `/v2/corporations/{corporation_id}/`   ---  This route is cached for up to 3600 seconds
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example={
  "alliance_id" : 434243723,
  "ceo_id" : 180548812,
  "corporation_name" : "C C P",
  "member_count" : 656,
  "ticker" : "-CCP-"
}}]
     
     - parameter corporationId: (path) An Eve corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<GetCorporationsCorporationIdOk> 
     */
    public class func getCorporationsCorporationIdWithRequestBuilder(corporationId corporationId: Int32, datasource: Datasource_getCorporationsCorporationId? = nil) -> RequestBuilder<GetCorporationsCorporationIdOk> {
        var path = "/corporations/{corporationId}/"
        path = path.stringByReplacingOccurrencesOfString("{corporationId}", withString: "\(corporationId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<GetCorporationsCorporationIdOk>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCorporationsCorporationIdAlliancehistory: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Get alliance history
     
     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCorporationsCorporationIdAlliancehistory(corporationId corporationId: Int32, datasource: Datasource_getCorporationsCorporationIdAlliancehistory? = nil, completion: ((data: [GetCorporationsCorporationIdAlliancehistory200Ok]?, error: ErrorType?) -> Void)) {
        getCorporationsCorporationIdAlliancehistoryWithRequestBuilder(corporationId: corporationId, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get alliance history
     - GET /corporations/{corporationId}/alliancehistory/
     - Get a list of all the alliances a corporation has been a member of  ---  Alternate route: `/v1/corporations/{corporation_id}/alliancehistory/`  Alternate route: `/legacy/corporations/{corporation_id}/alliancehistory/`  Alternate route: `/dev/corporations/{corporation_id}/alliancehistory/`   ---  This route is cached for up to 3600 seconds
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "alliance" : {
    "alliance_id" : 99000006,
    "is_deleted" : false
  },
  "record_id" : 23,
  "start_date" : "2016-10-25T14:46:00Z"
}, {
  "record_id" : 1,
  "start_date" : "2015-07-06T20:56:00Z"
} ]}]
     
     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<[GetCorporationsCorporationIdAlliancehistory200Ok]> 
     */
    public class func getCorporationsCorporationIdAlliancehistoryWithRequestBuilder(corporationId corporationId: Int32, datasource: Datasource_getCorporationsCorporationIdAlliancehistory? = nil) -> RequestBuilder<[GetCorporationsCorporationIdAlliancehistory200Ok]> {
        var path = "/corporations/{corporationId}/alliancehistory/"
        path = path.stringByReplacingOccurrencesOfString("{corporationId}", withString: "\(corporationId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[GetCorporationsCorporationIdAlliancehistory200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCorporationsCorporationIdIcons: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Get corporation icon
     
     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCorporationsCorporationIdIcons(corporationId corporationId: Int32, datasource: Datasource_getCorporationsCorporationIdIcons? = nil, completion: ((data: GetCorporationsCorporationIdIconsOk?, error: ErrorType?) -> Void)) {
        getCorporationsCorporationIdIconsWithRequestBuilder(corporationId: corporationId, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get corporation icon
     - GET /corporations/{corporationId}/icons/
     - Get the icon urls for a corporation  ---  Alternate route: `/v1/corporations/{corporation_id}/icons/`  Alternate route: `/legacy/corporations/{corporation_id}/icons/`  Alternate route: `/dev/corporations/{corporation_id}/icons/`   ---  This route is cached for up to 3600 seconds
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example={
  "px128x128" : "https://imageserver.eveonline.com/Corporation/1000010_128.png",
  "px256x256" : "https://imageserver.eveonline.com/Corporation/1000010_256.png",
  "px64x64" : "https://imageserver.eveonline.com/Corporation/1000010_64.png"
}}]
     
     - parameter corporationId: (path) An EVE corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<GetCorporationsCorporationIdIconsOk> 
     */
    public class func getCorporationsCorporationIdIconsWithRequestBuilder(corporationId corporationId: Int32, datasource: Datasource_getCorporationsCorporationIdIcons? = nil) -> RequestBuilder<GetCorporationsCorporationIdIconsOk> {
        var path = "/corporations/{corporationId}/icons/"
        path = path.stringByReplacingOccurrencesOfString("{corporationId}", withString: "\(corporationId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<GetCorporationsCorporationIdIconsOk>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCorporationsCorporationIdMembers: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Get corporation members
     
     - parameter corporationId: (path) A corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCorporationsCorporationIdMembers(corporationId corporationId: Int32, datasource: Datasource_getCorporationsCorporationIdMembers? = nil, completion: ((data: [GetCorporationsCorporationIdMembers200Ok]?, error: ErrorType?) -> Void)) {
        getCorporationsCorporationIdMembersWithRequestBuilder(corporationId: corporationId, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get corporation members
     - GET /corporations/{corporationId}/members/
     - Read the current list of members if the calling character is a member.  ---  Alternate route: `/v2/corporations/{corporation_id}/members/`  Alternate route: `/legacy/corporations/{corporation_id}/members/`  Alternate route: `/dev/corporations/{corporation_id}/members/`   ---  This route is cached for up to 3600 seconds
     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "character_id" : 90000001
}, {
  "character_id" : 90000002
} ]}]
     
     - parameter corporationId: (path) A corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<[GetCorporationsCorporationIdMembers200Ok]> 
     */
    public class func getCorporationsCorporationIdMembersWithRequestBuilder(corporationId corporationId: Int32, datasource: Datasource_getCorporationsCorporationIdMembers? = nil) -> RequestBuilder<[GetCorporationsCorporationIdMembers200Ok]> {
        var path = "/corporations/{corporationId}/members/"
        path = path.stringByReplacingOccurrencesOfString("{corporationId}", withString: "\(corporationId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[GetCorporationsCorporationIdMembers200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCorporationsCorporationIdRoles: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Get corporation member roles
     
     - parameter corporationId: (path) A corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCorporationsCorporationIdRoles(corporationId corporationId: Int32, datasource: Datasource_getCorporationsCorporationIdRoles? = nil, completion: ((data: [GetCorporationsCorporationIdRoles200Ok]?, error: ErrorType?) -> Void)) {
        getCorporationsCorporationIdRolesWithRequestBuilder(corporationId: corporationId, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get corporation member roles
     - GET /corporations/{corporationId}/roles/
     - Return the roles of all members if the character has the personnel manager role or any grantable role.  ---  Alternate route: `/v1/corporations/{corporation_id}/roles/`  Alternate route: `/legacy/corporations/{corporation_id}/roles/`  Alternate route: `/dev/corporations/{corporation_id}/roles/`   ---  This route is cached for up to 3600 seconds
     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "character_id" : 1000171,
  "roles" : [ "Director", "Station_Manager" ]
} ]}]
     
     - parameter corporationId: (path) A corporation ID 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<[GetCorporationsCorporationIdRoles200Ok]> 
     */
    public class func getCorporationsCorporationIdRolesWithRequestBuilder(corporationId corporationId: Int32, datasource: Datasource_getCorporationsCorporationIdRoles? = nil) -> RequestBuilder<[GetCorporationsCorporationIdRoles200Ok]> {
        var path = "/corporations/{corporationId}/roles/"
        path = path.stringByReplacingOccurrencesOfString("{corporationId}", withString: "\(corporationId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[GetCorporationsCorporationIdRoles200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCorporationsNames: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Get corporation names
     
     - parameter corporationIds: (query) A comma separated list of corporation IDs 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCorporationsNames(corporationIds corporationIds: [Int64], datasource: Datasource_getCorporationsNames? = nil, completion: ((data: [GetCorporationsNames200Ok]?, error: ErrorType?) -> Void)) {
        getCorporationsNamesWithRequestBuilder(corporationIds: corporationIds, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get corporation names
     - GET /corporations/names/
     - Resolve a set of corporation IDs to corporation names  ---  Alternate route: `/v1/corporations/names/`  Alternate route: `/legacy/corporations/names/`  Alternate route: `/dev/corporations/names/`   ---  This route is cached for up to 3600 seconds
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "corporation_id" : 1000171,
  "corporation_name" : "Republic University"
} ]}]
     
     - parameter corporationIds: (query) A comma separated list of corporation IDs 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<[GetCorporationsNames200Ok]> 
     */
    public class func getCorporationsNamesWithRequestBuilder(corporationIds corporationIds: [Int64], datasource: Datasource_getCorporationsNames? = nil) -> RequestBuilder<[GetCorporationsNames200Ok]> {
        let path = "/corporations/names/"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "corporation_ids": corporationIds,
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[GetCorporationsNames200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
