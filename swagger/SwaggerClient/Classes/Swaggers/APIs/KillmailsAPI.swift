//
// KillmailsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class KillmailsAPI: APIBase {
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getCharactersCharacterIdKillmailsRecent: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     List kills and losses
     
     - parameter characterId: (path) An EVE character ID 
     - parameter maxCount: (query) How many killmails to return at maximum (optional, default to 50)
     - parameter maxKillId: (query) Only return killmails with ID smaller than this.  (optional)
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCharactersCharacterIdKillmailsRecent(characterId characterId: Int32, maxCount: Int32? = nil, maxKillId: Int32? = nil, datasource: Datasource_getCharactersCharacterIdKillmailsRecent? = nil, completion: ((data: [GetCharactersCharacterIdKillmailsRecent200Ok]?, error: ErrorType?) -> Void)) {
        getCharactersCharacterIdKillmailsRecentWithRequestBuilder(characterId: characterId, maxCount: maxCount, maxKillId: maxKillId, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List kills and losses
     - GET /characters/{characterId}/killmails/recent/
     - Return a list of character's recent kills and losses  ---  Alternate route: `/v1/characters/{character_id}/killmails/recent/`  Alternate route: `/legacy/characters/{character_id}/killmails/recent/`  Alternate route: `/dev/characters/{character_id}/killmails/recent/`   ---  This route is cached for up to 120 seconds
     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "killmail_hash" : "8eef5e8fb6b88fe3407c489df33822b2e3b57a5e",
  "killmail_id" : 2
}, {
  "killmail_hash" : "b41ccb498ece33d64019f64c0db392aa3aa701fb",
  "killmail_id" : 1
} ]}]
     
     - parameter characterId: (path) An EVE character ID 
     - parameter maxCount: (query) How many killmails to return at maximum (optional, default to 50)
     - parameter maxKillId: (query) Only return killmails with ID smaller than this.  (optional)
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<[GetCharactersCharacterIdKillmailsRecent200Ok]> 
     */
    public class func getCharactersCharacterIdKillmailsRecentWithRequestBuilder(characterId characterId: Int32, maxCount: Int32? = nil, maxKillId: Int32? = nil, datasource: Datasource_getCharactersCharacterIdKillmailsRecent? = nil) -> RequestBuilder<[GetCharactersCharacterIdKillmailsRecent200Ok]> {
        var path = "/characters/{characterId}/killmails/recent/"
        path = path.stringByReplacingOccurrencesOfString("{characterId}", withString: "\(characterId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "max_count": maxCount?.encodeToJSON(),
            "max_kill_id": maxKillId?.encodeToJSON(),
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[GetCharactersCharacterIdKillmailsRecent200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_getKillmailsKillmailIdKillmailHash: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Get a single killmail
     
     - parameter killmailId: (path) The killmail ID to be queried 
     - parameter killmailHash: (path) The killmail hash for verification 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getKillmailsKillmailIdKillmailHash(killmailId killmailId: Int32, killmailHash: String, datasource: Datasource_getKillmailsKillmailIdKillmailHash? = nil, completion: ((data: GetKillmailsKillmailIdKillmailHashOk?, error: ErrorType?) -> Void)) {
        getKillmailsKillmailIdKillmailHashWithRequestBuilder(killmailId: killmailId, killmailHash: killmailHash, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a single killmail
     - GET /killmails/{killmailId}/{killmailHash}/
     - Return a single killmail from its ID and hash  ---  Alternate route: `/v1/killmails/{killmail_id}/{killmail_hash}/`  Alternate route: `/legacy/killmails/{killmail_id}/{killmail_hash}/`  Alternate route: `/dev/killmails/{killmail_id}/{killmail_hash}/`   ---  This route is cached for up to 3600 seconds
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example={
  "attackers" : [ {
    "character_id" : 95810944,
    "corporation_id" : 1000179,
    "damage_done" : 5745,
    "faction_id" : 500003,
    "final_blow" : true,
    "security_status" : -0.3,
    "ship_type_id" : 17841,
    "weapon_type_id" : 3074
  } ],
  "killmail_id" : 56733821,
  "killmail_time" : "2016-10-22T17:13:36Z",
  "solar_system_id" : 30002976,
  "victim" : {
    "alliance_id" : 621338554,
    "character_id" : 92796241,
    "corporation_id" : 841363671,
    "damage_taken" : 5745,
    "items" : [ {
      "flag" : 20,
      "item_type_id" : 5973,
      "quantity_dropped" : 1,
      "singleton" : 0
    } ],
    "position" : {
      "x" : 4.521866005694748E11,
      "y" : 1.4670496149090222E11,
      "z" : 1.0951459653254477E11
    },
    "ship_type_id" : 17812
  }
}}]
     
     - parameter killmailId: (path) The killmail ID to be queried 
     - parameter killmailHash: (path) The killmail hash for verification 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<GetKillmailsKillmailIdKillmailHashOk> 
     */
    public class func getKillmailsKillmailIdKillmailHashWithRequestBuilder(killmailId killmailId: Int32, killmailHash: String, datasource: Datasource_getKillmailsKillmailIdKillmailHash? = nil) -> RequestBuilder<GetKillmailsKillmailIdKillmailHashOk> {
        var path = "/killmails/{killmailId}/{killmailHash}/"
        path = path.stringByReplacingOccurrencesOfString("{killmailId}", withString: "\(killmailId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{killmailHash}", withString: "\(killmailHash)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<GetKillmailsKillmailIdKillmailHashOk>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
