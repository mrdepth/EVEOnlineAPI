//
// FleetsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class FleetsAPI: APIBase {
    /**
     * enum for parameter datasource
     */
    public enum Datasource_deleteFleetsFleetIdMembersMemberId: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Kick fleet member
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter memberId: (path) The character ID of a member in this fleet 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteFleetsFleetIdMembersMemberId(fleetId fleetId: Int64, memberId: Int32, datasource: Datasource_deleteFleetsFleetIdMembersMemberId? = nil, completion: ((error: ErrorType?) -> Void)) {
        deleteFleetsFleetIdMembersMemberIdWithRequestBuilder(fleetId: fleetId, memberId: memberId, datasource: datasource).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Kick fleet member
     - DELETE /fleets/{fleetId}/members/{memberId}/
     - Kick a fleet member  ---  Alternate route: `/v1/fleets/{fleet_id}/members/{member_id}/`  Alternate route: `/legacy/fleets/{fleet_id}/members/{member_id}/`  Alternate route: `/dev/fleets/{fleet_id}/members/{member_id}/` 
     - OAuth:
       - type: oauth2
       - name: evesso
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter memberId: (path) The character ID of a member in this fleet 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<Void> 
     */
    public class func deleteFleetsFleetIdMembersMemberIdWithRequestBuilder(fleetId fleetId: Int64, memberId: Int32, datasource: Datasource_deleteFleetsFleetIdMembersMemberId? = nil) -> RequestBuilder<Void> {
        var path = "/fleets/{fleetId}/members/{memberId}/"
        path = path.stringByReplacingOccurrencesOfString("{fleetId}", withString: "\(fleetId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{memberId}", withString: "\(memberId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_deleteFleetsFleetIdSquadsSquadId: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Delete fleet squad
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter squadId: (path) The squad to delete 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteFleetsFleetIdSquadsSquadId(fleetId fleetId: Int64, squadId: Int64, datasource: Datasource_deleteFleetsFleetIdSquadsSquadId? = nil, completion: ((error: ErrorType?) -> Void)) {
        deleteFleetsFleetIdSquadsSquadIdWithRequestBuilder(fleetId: fleetId, squadId: squadId, datasource: datasource).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete fleet squad
     - DELETE /fleets/{fleetId}/squads/{squadId}/
     - Delete a fleet squad, only empty squads can be deleted  ---  Alternate route: `/v1/fleets/{fleet_id}/squads/{squad_id}/`  Alternate route: `/legacy/fleets/{fleet_id}/squads/{squad_id}/`  Alternate route: `/dev/fleets/{fleet_id}/squads/{squad_id}/` 
     - OAuth:
       - type: oauth2
       - name: evesso
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter squadId: (path) The squad to delete 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<Void> 
     */
    public class func deleteFleetsFleetIdSquadsSquadIdWithRequestBuilder(fleetId fleetId: Int64, squadId: Int64, datasource: Datasource_deleteFleetsFleetIdSquadsSquadId? = nil) -> RequestBuilder<Void> {
        var path = "/fleets/{fleetId}/squads/{squadId}/"
        path = path.stringByReplacingOccurrencesOfString("{fleetId}", withString: "\(fleetId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{squadId}", withString: "\(squadId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_deleteFleetsFleetIdWingsWingId: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Delete fleet wing
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter wingId: (path) The wing to delete 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteFleetsFleetIdWingsWingId(fleetId fleetId: Int64, wingId: Int64, datasource: Datasource_deleteFleetsFleetIdWingsWingId? = nil, completion: ((error: ErrorType?) -> Void)) {
        deleteFleetsFleetIdWingsWingIdWithRequestBuilder(fleetId: fleetId, wingId: wingId, datasource: datasource).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete fleet wing
     - DELETE /fleets/{fleetId}/wings/{wingId}/
     - Delete a fleet wing, only empty wings can be deleted. The wing may contain squads, but the squads must be empty  ---  Alternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/`  Alternate route: `/legacy/fleets/{fleet_id}/wings/{wing_id}/`  Alternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/` 
     - OAuth:
       - type: oauth2
       - name: evesso
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter wingId: (path) The wing to delete 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<Void> 
     */
    public class func deleteFleetsFleetIdWingsWingIdWithRequestBuilder(fleetId fleetId: Int64, wingId: Int64, datasource: Datasource_deleteFleetsFleetIdWingsWingId? = nil) -> RequestBuilder<Void> {
        var path = "/fleets/{fleetId}/wings/{wingId}/"
        path = path.stringByReplacingOccurrencesOfString("{fleetId}", withString: "\(fleetId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{wingId}", withString: "\(wingId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_getFleetsFleetId: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Get fleet information
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getFleetsFleetId(fleetId fleetId: Int64, datasource: Datasource_getFleetsFleetId? = nil, completion: ((data: GetFleetsFleetIdOk?, error: ErrorType?) -> Void)) {
        getFleetsFleetIdWithRequestBuilder(fleetId: fleetId, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get fleet information
     - GET /fleets/{fleetId}/
     - Return details about a fleet  ---  Alternate route: `/v1/fleets/{fleet_id}/`  Alternate route: `/legacy/fleets/{fleet_id}/`  Alternate route: `/dev/fleets/{fleet_id}/`   ---  This route is cached for up to 5 seconds
     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example={
  "is_free_move" : false,
  "is_registered" : false,
  "is_voice_enabled" : false,
  "motd" : "This is an <b>awesome</b> fleet!"
}}]
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<GetFleetsFleetIdOk> 
     */
    public class func getFleetsFleetIdWithRequestBuilder(fleetId fleetId: Int64, datasource: Datasource_getFleetsFleetId? = nil) -> RequestBuilder<GetFleetsFleetIdOk> {
        var path = "/fleets/{fleetId}/"
        path = path.stringByReplacingOccurrencesOfString("{fleetId}", withString: "\(fleetId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<GetFleetsFleetIdOk>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_getFleetsFleetIdMembers: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Get fleet members
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getFleetsFleetIdMembers(fleetId fleetId: Int64, datasource: Datasource_getFleetsFleetIdMembers? = nil, completion: ((data: [GetFleetsFleetIdMembers200Ok]?, error: ErrorType?) -> Void)) {
        getFleetsFleetIdMembersWithRequestBuilder(fleetId: fleetId, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get fleet members
     - GET /fleets/{fleetId}/members/
     - Return information about fleet members  ---  Alternate route: `/v1/fleets/{fleet_id}/members/`  Alternate route: `/legacy/fleets/{fleet_id}/members/`  Alternate route: `/dev/fleets/{fleet_id}/members/`   ---  This route is cached for up to 5 seconds
     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), Content-Language(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Content-Language(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Content-Language(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Content-Language(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "character_id" : 93265215,
  "join_time" : "2016-04-29T12:34:56Z",
  "role" : "squad_commander",
  "role_name" : "Squad Commander (Boss)",
  "ship_type_id" : 33328,
  "solar_system_id" : 30003729,
  "squad_id" : 3129411261968,
  "station_id" : 61000180,
  "takes_fleet_warp" : true,
  "wing_id" : 2073711261968
} ]}]
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<[GetFleetsFleetIdMembers200Ok]> 
     */
    public class func getFleetsFleetIdMembersWithRequestBuilder(fleetId fleetId: Int64, datasource: Datasource_getFleetsFleetIdMembers? = nil) -> RequestBuilder<[GetFleetsFleetIdMembers200Ok]> {
        var path = "/fleets/{fleetId}/members/"
        path = path.stringByReplacingOccurrencesOfString("{fleetId}", withString: "\(fleetId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[GetFleetsFleetIdMembers200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_getFleetsFleetIdWings: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Get fleet wings
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getFleetsFleetIdWings(fleetId fleetId: Int64, datasource: Datasource_getFleetsFleetIdWings? = nil, completion: ((data: [GetFleetsFleetIdWings200Ok]?, error: ErrorType?) -> Void)) {
        getFleetsFleetIdWingsWithRequestBuilder(fleetId: fleetId, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get fleet wings
     - GET /fleets/{fleetId}/wings/
     - Return information about wings in a fleet  ---  Alternate route: `/v1/fleets/{fleet_id}/wings/`  Alternate route: `/legacy/fleets/{fleet_id}/wings/`  Alternate route: `/dev/fleets/{fleet_id}/wings/`   ---  This route is cached for up to 5 seconds
     - OAuth:
       - type: oauth2
       - name: evesso
     - responseHeaders: [Cache-Control(String), Content-Language(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Content-Language(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Content-Language(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Content-Language(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "id" : 2073711261968,
  "name" : "Wing 1",
  "squads" : [ {
    "id" : 3129411261968,
    "name" : "Squad 1"
  } ]
} ]}]
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<[GetFleetsFleetIdWings200Ok]> 
     */
    public class func getFleetsFleetIdWingsWithRequestBuilder(fleetId fleetId: Int64, datasource: Datasource_getFleetsFleetIdWings? = nil) -> RequestBuilder<[GetFleetsFleetIdWings200Ok]> {
        var path = "/fleets/{fleetId}/wings/"
        path = path.stringByReplacingOccurrencesOfString("{fleetId}", withString: "\(fleetId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[GetFleetsFleetIdWings200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_postFleetsFleetIdMembers: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Create fleet invitation
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter invitation: (body) Details of the invitation 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postFleetsFleetIdMembers(fleetId fleetId: Int64, invitation: PostFleetsFleetIdMembersInvitation, datasource: Datasource_postFleetsFleetIdMembers? = nil, completion: ((error: ErrorType?) -> Void)) {
        postFleetsFleetIdMembersWithRequestBuilder(fleetId: fleetId, invitation: invitation, datasource: datasource).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Create fleet invitation
     - POST /fleets/{fleetId}/members/
     - Invite a character into the fleet, if a character has a CSPA charge set, it is not possible to invite them to the fleet using ESI  ---  Alternate route: `/v1/fleets/{fleet_id}/members/`  Alternate route: `/legacy/fleets/{fleet_id}/members/`  Alternate route: `/dev/fleets/{fleet_id}/members/` 
     - OAuth:
       - type: oauth2
       - name: evesso
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter invitation: (body) Details of the invitation 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<Void> 
     */
    public class func postFleetsFleetIdMembersWithRequestBuilder(fleetId fleetId: Int64, invitation: PostFleetsFleetIdMembersInvitation, datasource: Datasource_postFleetsFleetIdMembers? = nil) -> RequestBuilder<Void> {
        var path = "/fleets/{fleetId}/members/"
        path = path.stringByReplacingOccurrencesOfString("{fleetId}", withString: "\(fleetId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = invitation.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_postFleetsFleetIdWings: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Create fleet wing
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postFleetsFleetIdWings(fleetId fleetId: Int64, datasource: Datasource_postFleetsFleetIdWings? = nil, completion: ((data: PostFleetsFleetIdWingsCreated?, error: ErrorType?) -> Void)) {
        postFleetsFleetIdWingsWithRequestBuilder(fleetId: fleetId, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create fleet wing
     - POST /fleets/{fleetId}/wings/
     - Create a new wing in a fleet  ---  Alternate route: `/v1/fleets/{fleet_id}/wings/`  Alternate route: `/legacy/fleets/{fleet_id}/wings/`  Alternate route: `/dev/fleets/{fleet_id}/wings/` 
     - OAuth:
       - type: oauth2
       - name: evesso
     - examples: [{contentType=application/json, example={
  "wing_id" : 123
}}]
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<PostFleetsFleetIdWingsCreated> 
     */
    public class func postFleetsFleetIdWingsWithRequestBuilder(fleetId fleetId: Int64, datasource: Datasource_postFleetsFleetIdWings? = nil) -> RequestBuilder<PostFleetsFleetIdWingsCreated> {
        var path = "/fleets/{fleetId}/wings/"
        path = path.stringByReplacingOccurrencesOfString("{fleetId}", withString: "\(fleetId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PostFleetsFleetIdWingsCreated>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_postFleetsFleetIdWingsWingIdSquads: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Create fleet squad
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter wingId: (path) The wing_id to create squad in 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postFleetsFleetIdWingsWingIdSquads(fleetId fleetId: Int64, wingId: Int64, datasource: Datasource_postFleetsFleetIdWingsWingIdSquads? = nil, completion: ((data: PostFleetsFleetIdWingsWingIdSquadsCreated?, error: ErrorType?) -> Void)) {
        postFleetsFleetIdWingsWingIdSquadsWithRequestBuilder(fleetId: fleetId, wingId: wingId, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create fleet squad
     - POST /fleets/{fleetId}/wings/{wingId}/squads/
     - Create a new squad in a fleet  ---  Alternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/squads/`  Alternate route: `/legacy/fleets/{fleet_id}/wings/{wing_id}/squads/`  Alternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/squads/` 
     - OAuth:
       - type: oauth2
       - name: evesso
     - examples: [{contentType=application/json, example={
  "squad_id" : 123
}}]
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter wingId: (path) The wing_id to create squad in 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<PostFleetsFleetIdWingsWingIdSquadsCreated> 
     */
    public class func postFleetsFleetIdWingsWingIdSquadsWithRequestBuilder(fleetId fleetId: Int64, wingId: Int64, datasource: Datasource_postFleetsFleetIdWingsWingIdSquads? = nil) -> RequestBuilder<PostFleetsFleetIdWingsWingIdSquadsCreated> {
        var path = "/fleets/{fleetId}/wings/{wingId}/squads/"
        path = path.stringByReplacingOccurrencesOfString("{fleetId}", withString: "\(fleetId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{wingId}", withString: "\(wingId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PostFleetsFleetIdWingsWingIdSquadsCreated>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_putFleetsFleetId: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Update fleet
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter newSettings: (body) What to update for this fleet 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putFleetsFleetId(fleetId fleetId: Int64, newSettings: PutFleetsFleetIdNewSettings, datasource: Datasource_putFleetsFleetId? = nil, completion: ((error: ErrorType?) -> Void)) {
        putFleetsFleetIdWithRequestBuilder(fleetId: fleetId, newSettings: newSettings, datasource: datasource).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Update fleet
     - PUT /fleets/{fleetId}/
     - Update settings about a fleet  ---  Alternate route: `/v1/fleets/{fleet_id}/`  Alternate route: `/legacy/fleets/{fleet_id}/`  Alternate route: `/dev/fleets/{fleet_id}/` 
     - OAuth:
       - type: oauth2
       - name: evesso
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter newSettings: (body) What to update for this fleet 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<Void> 
     */
    public class func putFleetsFleetIdWithRequestBuilder(fleetId fleetId: Int64, newSettings: PutFleetsFleetIdNewSettings, datasource: Datasource_putFleetsFleetId? = nil) -> RequestBuilder<Void> {
        var path = "/fleets/{fleetId}/"
        path = path.stringByReplacingOccurrencesOfString("{fleetId}", withString: "\(fleetId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = newSettings.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_putFleetsFleetIdMembersMemberId: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Move fleet member
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter memberId: (path) The character ID of a member in this fleet 
     - parameter movement: (body) Details of the invitation 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putFleetsFleetIdMembersMemberId(fleetId fleetId: Int64, memberId: Int32, movement: PutFleetsFleetIdMembersMemberIdMovement, datasource: Datasource_putFleetsFleetIdMembersMemberId? = nil, completion: ((error: ErrorType?) -> Void)) {
        putFleetsFleetIdMembersMemberIdWithRequestBuilder(fleetId: fleetId, memberId: memberId, movement: movement, datasource: datasource).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Move fleet member
     - PUT /fleets/{fleetId}/members/{memberId}/
     - Move a fleet member around  ---  Alternate route: `/v1/fleets/{fleet_id}/members/{member_id}/`  Alternate route: `/legacy/fleets/{fleet_id}/members/{member_id}/`  Alternate route: `/dev/fleets/{fleet_id}/members/{member_id}/` 
     - OAuth:
       - type: oauth2
       - name: evesso
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter memberId: (path) The character ID of a member in this fleet 
     - parameter movement: (body) Details of the invitation 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<Void> 
     */
    public class func putFleetsFleetIdMembersMemberIdWithRequestBuilder(fleetId fleetId: Int64, memberId: Int32, movement: PutFleetsFleetIdMembersMemberIdMovement, datasource: Datasource_putFleetsFleetIdMembersMemberId? = nil) -> RequestBuilder<Void> {
        var path = "/fleets/{fleetId}/members/{memberId}/"
        path = path.stringByReplacingOccurrencesOfString("{fleetId}", withString: "\(fleetId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{memberId}", withString: "\(memberId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = movement.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_putFleetsFleetIdSquadsSquadId: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Rename fleet squad
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter squadId: (path) The squad to rename 
     - parameter naming: (body) New name of the squad 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putFleetsFleetIdSquadsSquadId(fleetId fleetId: Int64, squadId: Int64, naming: PutFleetsFleetIdSquadsSquadIdNaming, datasource: Datasource_putFleetsFleetIdSquadsSquadId? = nil, completion: ((error: ErrorType?) -> Void)) {
        putFleetsFleetIdSquadsSquadIdWithRequestBuilder(fleetId: fleetId, squadId: squadId, naming: naming, datasource: datasource).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Rename fleet squad
     - PUT /fleets/{fleetId}/squads/{squadId}/
     - Rename a fleet squad  ---  Alternate route: `/v1/fleets/{fleet_id}/squads/{squad_id}/`  Alternate route: `/legacy/fleets/{fleet_id}/squads/{squad_id}/`  Alternate route: `/dev/fleets/{fleet_id}/squads/{squad_id}/` 
     - OAuth:
       - type: oauth2
       - name: evesso
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter squadId: (path) The squad to rename 
     - parameter naming: (body) New name of the squad 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<Void> 
     */
    public class func putFleetsFleetIdSquadsSquadIdWithRequestBuilder(fleetId fleetId: Int64, squadId: Int64, naming: PutFleetsFleetIdSquadsSquadIdNaming, datasource: Datasource_putFleetsFleetIdSquadsSquadId? = nil) -> RequestBuilder<Void> {
        var path = "/fleets/{fleetId}/squads/{squadId}/"
        path = path.stringByReplacingOccurrencesOfString("{fleetId}", withString: "\(fleetId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{squadId}", withString: "\(squadId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = naming.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_putFleetsFleetIdWingsWingId: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Rename fleet wing
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter wingId: (path) The wing to rename 
     - parameter naming: (body) New name of the wing 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func putFleetsFleetIdWingsWingId(fleetId fleetId: Int64, wingId: Int64, naming: PutFleetsFleetIdWingsWingIdNaming, datasource: Datasource_putFleetsFleetIdWingsWingId? = nil, completion: ((error: ErrorType?) -> Void)) {
        putFleetsFleetIdWingsWingIdWithRequestBuilder(fleetId: fleetId, wingId: wingId, naming: naming, datasource: datasource).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Rename fleet wing
     - PUT /fleets/{fleetId}/wings/{wingId}/
     - Rename a fleet wing  ---  Alternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/`  Alternate route: `/legacy/fleets/{fleet_id}/wings/{wing_id}/`  Alternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/` 
     - OAuth:
       - type: oauth2
       - name: evesso
     
     - parameter fleetId: (path) ID for a fleet 
     - parameter wingId: (path) The wing to rename 
     - parameter naming: (body) New name of the wing 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<Void> 
     */
    public class func putFleetsFleetIdWingsWingIdWithRequestBuilder(fleetId fleetId: Int64, wingId: Int64, naming: PutFleetsFleetIdWingsWingIdNaming, datasource: Datasource_putFleetsFleetIdWingsWingId? = nil) -> RequestBuilder<Void> {
        var path = "/fleets/{fleetId}/wings/{wingId}/"
        path = path.stringByReplacingOccurrencesOfString("{fleetId}", withString: "\(fleetId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{wingId}", withString: "\(wingId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = naming.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
