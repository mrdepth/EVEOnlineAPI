//
// WarsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class WarsAPI: APIBase {
    /**
     * enum for parameter datasource
     */
    public enum Datasource_getWars: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     List wars
     
     - parameter page: (query) Which page to query, starting at 1, 2000 wars per page. (optional, default to 1)
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getWars(page page: Int32? = nil, datasource: Datasource_getWars? = nil, completion: ((data: [Int32]?, error: ErrorType?) -> Void)) {
        getWarsWithRequestBuilder(page: page, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List wars
     - GET /wars/
     - Return a list of wars  ---  Alternate route: `/v1/wars/`  Alternate route: `/legacy/wars/`  Alternate route: `/dev/wars/`   ---  This route is cached for up to 3600 seconds
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ 3, 2, 1 ]}]
     
     - parameter page: (query) Which page to query, starting at 1, 2000 wars per page. (optional, default to 1)
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<[Int32]> 
     */
    public class func getWarsWithRequestBuilder(page page: Int32? = nil, datasource: Datasource_getWars? = nil) -> RequestBuilder<[Int32]> {
        let path = "/wars/"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "page": page?.encodeToJSON(),
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Int32]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_getWarsWarId: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     Get war information
     
     - parameter warId: (path) ID for a war 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getWarsWarId(warId warId: Int32, datasource: Datasource_getWarsWarId? = nil, completion: ((data: GetWarsWarIdOk?, error: ErrorType?) -> Void)) {
        getWarsWarIdWithRequestBuilder(warId: warId, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get war information
     - GET /wars/{warId}/
     - Return details about a war  ---  Alternate route: `/v1/wars/{war_id}/`  Alternate route: `/legacy/wars/{war_id}/`  Alternate route: `/dev/wars/{war_id}/`   ---  This route is cached for up to 3600 seconds
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example={
  "aggressor" : {
    "corporation_id" : 986665792,
    "isk_destroyed" : 0,
    "ships_killed" : 0
  },
  "declared" : "2004-05-22T05:20:00Z",
  "defender" : {
    "corporation_id" : 1001562011,
    "isk_destroyed" : 0,
    "ships_killed" : 0
  },
  "id" : 1941,
  "mutual" : false,
  "open_for_allies" : false
}}]
     
     - parameter warId: (path) ID for a war 
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<GetWarsWarIdOk> 
     */
    public class func getWarsWarIdWithRequestBuilder(warId warId: Int32, datasource: Datasource_getWarsWarId? = nil) -> RequestBuilder<GetWarsWarIdOk> {
        var path = "/wars/{warId}/"
        path = path.stringByReplacingOccurrencesOfString("{warId}", withString: "\(warId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<GetWarsWarIdOk>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter datasource
     */
    public enum Datasource_getWarsWarIdKillmails: String { 
        case Tranquility = "tranquility"
        case Singularity = "singularity"
    }

    /**
     List kills for a war
     
     - parameter warId: (path) A valid war ID 
     - parameter page: (query) Which page to query, starting at 1, 2000 killmails per page. (optional, default to 1)
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getWarsWarIdKillmails(warId warId: Int32, page: Int32? = nil, datasource: Datasource_getWarsWarIdKillmails? = nil, completion: ((data: [GetWarsWarIdKillmails200Ok]?, error: ErrorType?) -> Void)) {
        getWarsWarIdKillmailsWithRequestBuilder(warId: warId, page: page, datasource: datasource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List kills for a war
     - GET /wars/{warId}/killmails/
     - Return a list of kills related to a war  ---  Alternate route: `/v1/wars/{war_id}/killmails/`  Alternate route: `/legacy/wars/{war_id}/killmails/`  Alternate route: `/dev/wars/{war_id}/killmails/`   ---  This route is cached for up to 3600 seconds
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - responseHeaders: [Cache-Control(String), Expires(String), Last-Modified(String)]
     - examples: [{contentType=application/json, example=[ {
  "killmail_hash" : "8eef5e8fb6b88fe3407c489df33822b2e3b57a5e",
  "killmail_id" : 2
}, {
  "killmail_hash" : "b41ccb498ece33d64019f64c0db392aa3aa701fb",
  "killmail_id" : 1
} ]}]
     
     - parameter warId: (path) A valid war ID 
     - parameter page: (query) Which page to query, starting at 1, 2000 killmails per page. (optional, default to 1)
     - parameter datasource: (query) The server name you would like data from (optional, default to tranquility)

     - returns: RequestBuilder<[GetWarsWarIdKillmails200Ok]> 
     */
    public class func getWarsWarIdKillmailsWithRequestBuilder(warId warId: Int32, page: Int32? = nil, datasource: Datasource_getWarsWarIdKillmails? = nil) -> RequestBuilder<[GetWarsWarIdKillmails200Ok]> {
        var path = "/wars/{warId}/killmails/"
        path = path.stringByReplacingOccurrencesOfString("{warId}", withString: "\(warId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "page": page?.encodeToJSON(),
            "datasource": datasource?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[GetWarsWarIdKillmails200Ok]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
