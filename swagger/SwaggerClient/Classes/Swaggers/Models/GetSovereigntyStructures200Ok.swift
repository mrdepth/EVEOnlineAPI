//
// GetSovereigntyStructures200Ok.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** 200 ok object */
public class GetSovereigntyStructures200Ok: JSONEncodable {
    /** The alliance that owns the structure.  */
    public var allianceId: Int32?
    /** Solar system in which the structure is located.  */
    public var solarSystemId: Int32?
    /** Unique item ID for this structure. */
    public var structureId: Int64?
    /** A reference to the type of structure this is.  */
    public var structureTypeId: Int32?
    /** The occupancy level for the next or current vulnerability window. This takes into account all development indexes and capital system bonuses. Also known as Activity Defense Multiplier from in the client. It increases the time that attackers must spend using their entosis links on the structure.  */
    public var vulnerabilityOccupancyLevel: Float?
    /** The time at which the next or current vulnerability window ends. At the end of a vulnerability window the next window is recalculated and locked in along with the vulnerabilityOccupancyLevel. If the structure is not in 100% entosis control of the defender, it will go in to &#39;overtime&#39; and stay vulnerable for as long as that situation persists. Only once the defenders have 100% entosis control and has the vulnerableEndTime passed does the vulnerability interval expire and a new one is calculated.  */
    public var vulnerableEndTime: NSDate?
    /** The next time at which the structure will become vulnerable. Or the start time of the current window if current time is between this and vulnerableEndTime.  */
    public var vulnerableStartTime: NSDate?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["alliance_id"] = self.allianceId?.encodeToJSON()
        nillableDictionary["solar_system_id"] = self.solarSystemId?.encodeToJSON()
        nillableDictionary["structure_id"] = self.structureId?.encodeToJSON()
        nillableDictionary["structure_type_id"] = self.structureTypeId?.encodeToJSON()
        nillableDictionary["vulnerability_occupancy_level"] = self.vulnerabilityOccupancyLevel
        nillableDictionary["vulnerable_end_time"] = self.vulnerableEndTime?.encodeToJSON()
        nillableDictionary["vulnerable_start_time"] = self.vulnerableStartTime?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
