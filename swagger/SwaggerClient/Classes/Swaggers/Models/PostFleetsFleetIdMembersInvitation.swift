//
// PostFleetsFleetIdMembersInvitation.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** invitation object */
public class PostFleetsFleetIdMembersInvitation: JSONEncodable {
    public enum Role: String { 
        case FleetCommander = "fleet_commander"
        case WingCommander = "wing_commander"
        case SquadCommander = "squad_commander"
        case SquadMember = "squad_member"
    }
    /** The character you want to invite */
    public var characterId: Int32?
    /** - If a character is invited with the &#x60;fleet_commander&#x60; role, neither &#x60;wing_id&#x60; or &#x60;squad_id&#x60; should be specified - If a character is invited with the &#x60;wing_commander&#x60; role, only &#x60;wing_id&#x60; should be specified - If a character is invited with the &#x60;squad_commander&#x60; role, both &#x60;wing_id&#x60; and &#x60;squad_id&#x60; should be specified - If a character is invited with the &#x60;squad_member&#x60; role, &#x60;wing_id&#x60; and &#x60;squad_id&#x60; should either both be specified or not specified at all. If they arenâ€™t specified, the invited character will join any squad with available positions  */
    public var role: Role?
    /** squad_id integer */
    public var squadId: Int64?
    /** wing_id integer */
    public var wingId: Int64?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["character_id"] = self.characterId?.encodeToJSON()
        nillableDictionary["role"] = self.role?.rawValue
        nillableDictionary["squad_id"] = self.squadId?.encodeToJSON()
        nillableDictionary["wing_id"] = self.wingId?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
