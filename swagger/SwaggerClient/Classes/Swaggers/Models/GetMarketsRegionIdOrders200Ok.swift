//
// GetMarketsRegionIdOrders200Ok.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** 200 ok object */
public class GetMarketsRegionIdOrders200Ok: JSONEncodable {
    public enum Range: String { 
        case Station = "station"
        case Region = "region"
        case Solarsystem = "solarsystem"
        case 1 = "1"
        case 2 = "2"
        case 3 = "3"
        case 4 = "4"
        case 5 = "5"
        case 10 = "10"
        case 20 = "20"
        case 30 = "30"
        case 40 = "40"
    }
    /** duration integer */
    public var duration: Int32?
    /** is_buy_order boolean */
    public var isBuyOrder: Bool?
    /** issued string */
    public var issued: NSDate?
    /** location_id integer */
    public var locationId: Int64?
    /** min_volume integer */
    public var minVolume: Int32?
    /** order_id integer */
    public var orderId: Int64?
    /** price number */
    public var price: Float?
    /** range string */
    public var range: Range?
    /** type_id integer */
    public var typeId: Int32?
    /** volume_remain integer */
    public var volumeRemain: Int32?
    /** volume_total integer */
    public var volumeTotal: Int32?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["duration"] = self.duration?.encodeToJSON()
        nillableDictionary["is_buy_order"] = self.isBuyOrder
        nillableDictionary["issued"] = self.issued?.encodeToJSON()
        nillableDictionary["location_id"] = self.locationId?.encodeToJSON()
        nillableDictionary["min_volume"] = self.minVolume?.encodeToJSON()
        nillableDictionary["order_id"] = self.orderId?.encodeToJSON()
        nillableDictionary["price"] = self.price
        nillableDictionary["range"] = self.range?.rawValue
        nillableDictionary["type_id"] = self.typeId?.encodeToJSON()
        nillableDictionary["volume_remain"] = self.volumeRemain?.encodeToJSON()
        nillableDictionary["volume_total"] = self.volumeTotal?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
