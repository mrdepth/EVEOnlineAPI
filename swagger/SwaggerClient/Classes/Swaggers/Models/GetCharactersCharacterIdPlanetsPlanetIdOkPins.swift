//
// GetCharactersCharacterIdPlanetsPlanetIdOkPins.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** pin object */
public class GetCharactersCharacterIdPlanetsPlanetIdOkPins: JSONEncodable {
    /** content array */
    public var content: [GetCharactersCharacterIdPlanetsPlanetIdOkContent]?
    /** expiry_time string */
    public var expiryTime: NSDate?
    public var extractorDetails: GetCharactersCharacterIdPlanetsPlanetIdOkExtractorDetails?
    public var factoryDetails: GetCharactersCharacterIdPlanetsPlanetIdOkFactoryDetails?
    /** install_time string */
    public var installTime: NSDate?
    /** last_cycle_start string */
    public var lastCycleStart: NSDate?
    /** latitude number */
    public var latitude: Float?
    /** longitude number */
    public var longitude: Float?
    /** pin_id integer */
    public var pinId: Int64?
    /** schematic_id integer */
    public var schematicId: Int32?
    /** type_id integer */
    public var typeId: Int32?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["content"] = self.content?.encodeToJSON()
        nillableDictionary["expiry_time"] = self.expiryTime?.encodeToJSON()
        nillableDictionary["extractor_details"] = self.extractorDetails?.encodeToJSON()
        nillableDictionary["factory_details"] = self.factoryDetails?.encodeToJSON()
        nillableDictionary["install_time"] = self.installTime?.encodeToJSON()
        nillableDictionary["last_cycle_start"] = self.lastCycleStart?.encodeToJSON()
        nillableDictionary["latitude"] = self.latitude
        nillableDictionary["longitude"] = self.longitude
        nillableDictionary["pin_id"] = self.pinId?.encodeToJSON()
        nillableDictionary["schematic_id"] = self.schematicId?.encodeToJSON()
        nillableDictionary["type_id"] = self.typeId?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
